name: Deploy pages

on:
  workflow_dispatch:
  push:
    branches: [main, deploy]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  get-presentations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: List Presentations
        id: list_presentations
        run: |
          dirs=$(ls | jq -R -s -c 'split("\n")[:-1]')
          echo "dirs=$dirs" >> $GITHUB_ENV

  deploy-matrix:
    needs: get-presentations
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJSON(needs.get-presentations.outputs.dirs) }}
        
    steps:
      - name: Check
        run: echo "${{ matrix.dir }}"
        
  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       version: [10, 12, 14]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 'lts/*'
          
  #     - name: Setup pnpm
  #       uses: pnpm/action-setup@v3

  #     - name: Setup @antfu/ni
  #       run: pnpm i -g @antfu/ni

  #     - name: Install dependencies
  #       run: nci

  #     - name: Build
  #       run: nr build --base /${{github.event.repository.name}}/

  #     - name: Setup Pages
  #       uses: actions/configure-pages@v4

  #     - uses: actions/upload-pages-artifact@v3
  #       with:
  #         path: dist

  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   needs: build
  #   runs-on: ubuntu-latest
  #   name: Deploy
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
